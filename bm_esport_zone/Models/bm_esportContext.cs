// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace bm_esport_zone.Models;

public partial class bm_esportContext : DbContext
{
    public bm_esportContext(DbContextOptions<bm_esportContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Detallepedido> Detallepedidos { get; set; }

    public virtual DbSet<Factura> Facturas { get; set; }

    public virtual DbSet<Horario> Horarios { get; set; }

    public virtual DbSet<Maquina> Maquinas { get; set; }

    public virtual DbSet<Pedido> Pedidos { get; set; }

    public virtual DbSet<Persona> Personas { get; set; }

    public virtual DbSet<Producto> Productos { get; set; }

    public virtual DbSet<Reserva> Reservas { get; set; }

    public virtual DbSet<Rol> Rols { get; set; }

    public virtual DbSet<Usuario> Usuarios { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .UseCollation("utf8mb3_general_ci")
            .HasCharSet("utf8mb3");

        modelBuilder.Entity<Detallepedido>(entity =>
        {
            entity.HasKey(e => e.IdDetallePedido).HasName("PRIMARY");

            entity.ToTable("detallepedido");

            entity.HasIndex(e => e.IdPedidos, "fk_DetallePedido_Pedidos1_idx");

            entity.HasIndex(e => e.IdProductos, "fk_DetallePedido_Productos1_idx");

            entity.Property(e => e.IdDetallePedido).HasColumnName("idDetallePedido");
            entity.Property(e => e.PrecioUnitario).HasPrecision(10);
            entity.Property(e => e.Subtotal).HasPrecision(10);

            entity.HasOne(d => d.IdPedidosNavigation).WithMany(p => p.Detallepedidos)
                .HasForeignKey(d => d.IdPedidos)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_DetallePedido_Pedidos1");

            entity.HasOne(d => d.IdProductosNavigation).WithMany(p => p.Detallepedidos)
                .HasForeignKey(d => d.IdProductos)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_DetallePedido_Productos1");
        });

        modelBuilder.Entity<Factura>(entity =>
        {
            entity.HasKey(e => e.IdFactura).HasName("PRIMARY");

            entity.ToTable("factura");

            entity.HasIndex(e => e.IdPedidos, "fk_Factura_Pedidos1_idx");

            entity.HasIndex(e => e.IdReservas, "fk_Factura_Reservas1_idx");

            entity.HasIndex(e => e.IdUsuario, "fk_Factura_Usuario1_idx");

            entity.Property(e => e.IdFactura).HasColumnName("idFactura");
            entity.Property(e => e.FechaFactura).HasColumnType("datetime");
            entity.Property(e => e.MontoTotal).HasPrecision(10);

            entity.HasOne(d => d.IdPedidosNavigation).WithMany(p => p.Facturas)
                .HasForeignKey(d => d.IdPedidos)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_Factura_Pedidos1");

            entity.HasOne(d => d.IdReservasNavigation).WithMany(p => p.Facturas)
                .HasForeignKey(d => d.IdReservas)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_Factura_Reservas1");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.Facturas)
                .HasForeignKey(d => d.IdUsuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_Factura_Usuario1");
        });

        modelBuilder.Entity<Horario>(entity =>
        {
            entity.HasKey(e => e.IdHorarios).HasName("PRIMARY");

            entity.ToTable("horarios");

            entity.HasIndex(e => e.IdMaquinas, "fk_Horarios_Maquinas1_idx");

            entity.Property(e => e.IdHorarios).HasColumnName("idHorarios");
            entity.Property(e => e.HoraFin).HasColumnType("time");
            entity.Property(e => e.HoraInicio).HasColumnType("time");
            entity.Property(e => e.Precio).HasPrecision(10);

            entity.HasOne(d => d.IdMaquinasNavigation).WithMany(p => p.Horarios)
                .HasForeignKey(d => d.IdMaquinas)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_Horarios_Maquinas1");
        });

        modelBuilder.Entity<Maquina>(entity =>
        {
            entity.HasKey(e => e.IdMaquinas).HasName("PRIMARY");

            entity.ToTable("maquinas");

            entity.Property(e => e.IdMaquinas).HasColumnName("idMaquinas");
            entity.Property(e => e.EsActivo)
                .IsRequired()
                .HasDefaultValueSql("'1'");
            entity.Property(e => e.NombreMaquina).HasMaxLength(45);
        });

        modelBuilder.Entity<Pedido>(entity =>
        {
            entity.HasKey(e => e.IdPedidos).HasName("PRIMARY");

            entity.ToTable("pedidos");

            entity.HasIndex(e => e.IdUsuario, "fk_Pedidos_Usuario1_idx");

            entity.Property(e => e.IdPedidos).HasColumnName("idPedidos");
            entity.Property(e => e.FechaPedido).HasColumnType("datetime");
            entity.Property(e => e.Total).HasPrecision(10);

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.Pedidos)
                .HasForeignKey(d => d.IdUsuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_Pedidos_Usuario1");
        });

        modelBuilder.Entity<Persona>(entity =>
        {
            entity.HasKey(e => e.IdPersonas).HasName("PRIMARY");

            entity.ToTable("personas");

            entity.Property(e => e.IdPersonas).HasColumnName("idPersonas");
            entity.Property(e => e.Apellidos)
                .IsRequired()
                .HasMaxLength(90);
            entity.Property(e => e.CorreoElectronico)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Direccion)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Nombres)
                .IsRequired()
                .HasMaxLength(90);
            entity.Property(e => e.NumeroCelular)
                .IsRequired()
                .HasMaxLength(10);
        });

        modelBuilder.Entity<Producto>(entity =>
        {
            entity.HasKey(e => e.IdProductos).HasName("PRIMARY");

            entity.ToTable("productos");

            entity.Property(e => e.IdProductos).HasColumnName("idProductos");
            entity.Property(e => e.NombreProdcuto).HasMaxLength(45);
            entity.Property(e => e.Precio).HasPrecision(10);
        });

        modelBuilder.Entity<Reserva>(entity =>
        {
            entity.HasKey(e => e.IdReservas).HasName("PRIMARY");

            entity.ToTable("reservas");

            entity.HasIndex(e => e.IdMaquinas, "fk_Reservas_Maquinas1_idx");

            entity.HasIndex(e => e.IdUsuario, "fk_Reservas_Usuario1_idx");

            entity.Property(e => e.IdReservas).HasColumnName("idReservas");
            entity.Property(e => e.FechaReserv).HasColumnType("datetime");
            entity.Property(e => e.Total).HasPrecision(10);

            entity.HasOne(d => d.IdMaquinasNavigation).WithMany(p => p.Reservas)
                .HasForeignKey(d => d.IdMaquinas)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_Reservas_Maquinas1");

            entity.HasOne(d => d.IdUsuarioNavigation).WithMany(p => p.Reservas)
                .HasForeignKey(d => d.IdUsuario)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_Reservas_Usuario1");
        });

        modelBuilder.Entity<Rol>(entity =>
        {
            entity.HasKey(e => e.IdRol).HasName("PRIMARY");

            entity.ToTable("rol");

            entity.Property(e => e.IdRol).HasColumnName("idRol");
            entity.Property(e => e.Descripcion).HasMaxLength(500);
        });

        modelBuilder.Entity<Usuario>(entity =>
        {
            entity.HasKey(e => e.IdUsuario).HasName("PRIMARY");

            entity.ToTable("usuario");

            entity.HasIndex(e => e.IdPersonas, "fk_Usuario_Personas_idx");

            entity.HasIndex(e => e.IdRol, "fk_Usuario_Rol1_idx");

            entity.Property(e => e.IdUsuario).HasColumnName("idUsuario");
            entity.Property(e => e.Clave)
                .IsRequired()
                .HasMaxLength(80);
            entity.Property(e => e.NombreUsuario)
                .IsRequired()
                .HasMaxLength(80);

            entity.HasOne(d => d.IdPersonasNavigation).WithMany(p => p.Usuarios)
                .HasForeignKey(d => d.IdPersonas)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_Usuario_Personas");

            entity.HasOne(d => d.IdRolNavigation).WithMany(p => p.Usuarios)
                .HasForeignKey(d => d.IdRol)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("fk_Usuario_Rol1");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}